/*############################################################################################
 ESP-Led-Clock
 WiFi connected LED clock based on ESP8266

 Author: Daniele Colanardi
 License: BSD, see LICENSE file
############################################################################################*/

const byte small_numbers[] PROGMEM = {
  0x40, 0xA0, 0xA0, 0xA0, 0x40,   // Char 0
  0x40, 0xC0, 0x40, 0x40, 0xE0,   // Char 1
  0xC0, 0x20, 0x60, 0x80, 0xE0,   // Char 2
  0xC0, 0x20, 0x40, 0x20, 0xC0,   // Char 3
  0xA0, 0xA0, 0x60, 0x20, 0x20,   // Char 4
  0x60, 0x80, 0xC0, 0x20, 0xE0,   // Char 5
  0x60, 0x80, 0xC0, 0xA0, 0x60,   // Char 6
  0xE0, 0x20, 0x40, 0x40, 0x40,   // Char 7
  0x60, 0xA0, 0xE0, 0xA0, 0xC0,   // Char 8
  0xC0, 0xA0, 0x60, 0x20, 0xE0,   // Char 9
};

const byte font_numbers[] PROGMEM = {
  0x60, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x60,   // Char 0
  0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,   // Char 1
  0xE0, 0x10, 0x10, 0x10, 0x60, 0x80, 0x80, 0x70,   // Char 2
  0x60, 0x90, 0x10, 0x20, 0x10, 0x10, 0x90, 0x60,   // Char 3
  0x90, 0x90, 0x90, 0x90, 0x70, 0x10, 0x10, 0x10,   // Char 4
  0x70, 0x80, 0x80, 0x60, 0x10, 0x10, 0x10, 0xE0,   // Char 5
  0x60, 0x90, 0x80, 0xE0, 0x90, 0x90, 0x90, 0x60,   // Char 6
  0xF0, 0x10, 0x10, 0x20, 0x20, 0x40, 0x40, 0x40,   // Char 7
  0x60, 0x90, 0x90, 0x60, 0x90, 0x90, 0x90, 0x60,   // Char 8
  0x60, 0x90, 0x90, 0x90, 0x70, 0x10, 0x90, 0x60,   // Char 9
};

const byte font5x5[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00,   // Char  
  0x20, 0x20, 0x20, 0x00, 0x20,   // Char !
  0x50, 0x50, 0x00, 0x00, 0x00,   // Char "
  0x50, 0xF8, 0x50, 0xF8, 0x50,   // Char #
  0x00, 0x00, 0x00, 0x00, 0x00,   // Char $
  0xC8, 0xD0, 0x20, 0x58, 0x98,   // Char %
  0x00, 0x00, 0x00, 0x00, 0x00,   // Char &
  0x20, 0x20, 0x00, 0x00, 0x00,   // Char '
  0x20, 0x40, 0x40, 0x40, 0x20,   // Char (
  0x20, 0x10, 0x10, 0x10, 0x20,   // Char )
  0x20, 0xA8, 0x70, 0xA8, 0x20,   // Char *
  0x00, 0x20, 0x70, 0x20, 0x00,   // Char +
  0x00, 0x00, 0x00, 0x20, 0x40,   // Char ,
  0x00, 0x00, 0x70, 0x00, 0x00,   // Char -
  0x00, 0x00, 0x00, 0x00, 0x20,   // Char .
  0x08, 0x10, 0x20, 0x40, 0x80,   // Char /
  0x70, 0x88, 0xA8, 0x88, 0x70,   // Char 0
  0x20, 0x60, 0x20, 0x20, 0x70,   // Char 1
  0xF0, 0x08, 0x70, 0x80, 0xF8,   // Char 2
  0xF0, 0x08, 0x30, 0x08, 0xF0,   // Char 3
  0x88, 0x88, 0x78, 0x08, 0x08,   // Char 4
  0xF8, 0x80, 0xF0, 0x08, 0xF0,   // Char 5
  0x70, 0x80, 0xF0, 0x88, 0x70,   // Char 6
  0xF8, 0x08, 0x10, 0x20, 0x20,   // Char 7
  0x70, 0x88, 0x70, 0x88, 0x70,   // Char 8
  0x70, 0x88, 0x78, 0x08, 0x70,   // Char 9
  0x00, 0x20, 0x00, 0x20, 0x00,   // Char :
  0x00, 0x20, 0x00, 0x20, 0x60,   // Char ;
  0x10, 0x20, 0x40, 0x20, 0x10,   // Char <
  0x00, 0x70, 0x00, 0x70, 0x00,   // Char =
  0x40, 0x20, 0x10, 0x20, 0x40,   // Char >
  0x70, 0x88, 0x30, 0x00, 0x20,   // Char ?
  0x00, 0x00, 0x00, 0x00, 0x00,   // Char @
  0x70, 0x88, 0xF8, 0x88, 0x88,   // Char A
  0xF0, 0x88, 0xF0, 0x88, 0xF0,   // Char B
  0x78, 0x80, 0x80, 0x80, 0x78,   // Char C
  0xF0, 0x88, 0x88, 0x88, 0xF0,   // Char D
  0xF8, 0x80, 0xF0, 0x80, 0xF8,   // Char E
  0xF8, 0x80, 0xE0, 0x80, 0x80,   // Char F
  0x78, 0x80, 0x98, 0x88, 0x78,   // Char G
  0x88, 0x88, 0xF8, 0x88, 0x88,   // Char H
  0x20, 0x20, 0x20, 0x20, 0x20,   // Char I
  0x38, 0x08, 0x08, 0x88, 0x70,   // Char J
  0x90, 0xA0, 0xF0, 0x88, 0x88,   // Char K
  0x80, 0x80, 0x80, 0x80, 0xF8,   // Char L
  0x88, 0xD8, 0xA8, 0x88, 0x88,   // Char M
  0x88, 0xC8, 0xA8, 0x98, 0x88,   // Char N
  0x70, 0x88, 0x88, 0x88, 0x70,   // Char O
  0xF0, 0x88, 0xF0, 0x80, 0x80,   // Char P
  0x60, 0x90, 0x90, 0x90, 0x78,   // Char Q
  0xF0, 0x88, 0xF0, 0x90, 0x88,   // Char R
  0x78, 0x80, 0x70, 0x08, 0xF0,   // Char S
  0xF8, 0x20, 0x20, 0x20, 0x20,   // Char T
  0x88, 0x88, 0x88, 0x88, 0x70,   // Char U
  0x88, 0x88, 0x50, 0x50, 0x20,   // Char V
  0x88, 0x88, 0xA8, 0xD8, 0x88,   // Char W
  0x88, 0x50, 0x20, 0x50, 0x88,   // Char X
  0x88, 0x88, 0x70, 0x20, 0x20,   // Char Y
  0xF8, 0x08, 0x70, 0x80, 0xF8,   // Char Z
  0x60, 0x40, 0x40, 0x40, 0x60,   // Char [
  0x80, 0x40, 0x20, 0x10, 0x08,   // Char backslash
  0x30, 0x10, 0x10, 0x10, 0x30,   // Char ]
  0x20, 0x50, 0x00, 0x00, 0x00,   // Char ^
  0x00, 0x00, 0x00, 0x00, 0xF8,   // Char _
  0x60, 0x20, 0x00, 0x00, 0x00,   // Char `
  0x70, 0x08, 0x78, 0x88, 0x70,   // Char a
  0x80, 0x80, 0xF0, 0x88, 0x70,   // Char b
  0x78, 0x80, 0x80, 0x80, 0x78,   // Char c  
  0x08, 0x08, 0x78, 0x88, 0x70,   // Char d
  0x70, 0x88, 0xF0, 0x80, 0x70,   // Char e
  0x78, 0x80, 0xE0, 0x80, 0x80,   // Char f
  0x70, 0x88, 0x78, 0x08, 0x70,   // Char g
  0x80, 0xF0, 0x88, 0x88, 0x88,   // Char h
  0x20, 0x00, 0x20, 0x20, 0x20,   // Char i
  0x20, 0x00, 0x20, 0x20, 0x60,   // Char j
  0x90, 0xA0, 0xF0, 0x88, 0x88,   // Char k
  0x20, 0x20, 0x20, 0x20, 0x20,   // Char l
  0x50, 0xA8, 0xA8, 0xA8, 0xA8,   // Char m
  0x70, 0x88, 0x88, 0x88, 0x88,   // Char n
  0x70, 0x88, 0x88, 0x88, 0x70,   // Char o
  0x70, 0x88, 0xF0, 0x80, 0x80,   // Char p
  0x70, 0x88, 0x78, 0x08, 0x08,   // Char q
  0xB0, 0xC8, 0x80, 0x80, 0x80,   // Char r
  0x78, 0x80, 0x70, 0x08, 0xF0,   // Char s
  0x80, 0xE0, 0x80, 0x88, 0x70,   // Char t
  0x88, 0x88, 0x88, 0x98, 0x68,   // Char u
  0x88, 0x88, 0x50, 0x50, 0x20,   // Char v
  0x88, 0xA8, 0xA8, 0xA8, 0x50,   // Char w
  0x88, 0x88, 0x70, 0x88, 0x88,   // Char x
  0x88, 0x88, 0x70, 0x08, 0x70,   // Char y
  0xF8, 0x10, 0x20, 0x40, 0xF8,   // Char z
  0x00, 0x00, 0x00, 0x00, 0x00,   // Char {
  0x20, 0x20, 0x20, 0x20, 0x20,   // Char |
  0x00, 0x00, 0x00, 0x00, 0x00,   // Char }
  //0x00, 0x40, 0xA8, 0x10, 0x00,   // Char ~
  0x20, 0x70, 0x70, 0xF8, 0x20,   // Char alberello
  0x50, 0x20, 0xF8, 0x20, 0x50    // Char neve (come asterisco, girato di 90 gradi)
};
